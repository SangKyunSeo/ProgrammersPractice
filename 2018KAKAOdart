import java.util.*;

class Solution {
    public int solution(String dartResult) {
        int answer = 0;
        String[] arr = new String[3];
        int idx = 0;
        
        // 3세트의 다트게임을 세트별로 자르는 반복문
        for(int i =0;i<dartResult.length();i++){
            if(dartResult.charAt(i)=='S'||dartResult.charAt(i)=='D'||dartResult.charAt(i)=='T'){
                if(i==dartResult.length()-1){
                    if(dartResult.charAt(i-2)>='0'&&dartResult.charAt(i-2)<='9')
                        arr[idx]=dartResult.substring(i-2,i+1);
                    else
                        arr[idx]=dartResult.substring(i-1,i+1);
                }else{
                    if(dartResult.charAt(i+1)=='*'||dartResult.charAt(i+1)=='#'){
                        if(i-2>=0){
                            if(dartResult.charAt(i-2)>='0'&&dartResult.charAt(i-2)<='9')
                                arr[idx]=dartResult.substring(i-2,i+2);
                            else
                                arr[idx]=dartResult.substring(i-1,i+2);
                        }else{
                            arr[idx]=dartResult.substring(i-1,i+2);
                        }
                        idx++;
                    }else{
                        if(i-2>=0){
                            if(dartResult.charAt(i-2)>='0'&&dartResult.charAt(i-2)<='9')
                                arr[idx]=dartResult.substring(i-2,i+1);
                            else
                                arr[idx]=dartResult.substring(i-1,i+1);
                        }else{
                            arr[idx]=dartResult.substring(i-1,i+1);
                        } 
                        idx++;
                    }
                }
            }
        }
        
        
        int[] n = new int[3]; // 세트별 점수 배열
        // arr배열 3의 크기에는 세트별 점수 보너스 옵션 값들이 존재, 각 보너스 별로 숫자의 제곱승을 정함, 옵션이 존재하면 2배 또는 음수로 설정, 전 세트의 2배옵션 설정
        for(int i =0;i<arr.length;i++){
            String e = arr[i];
            if(e.contains("S")){
                if(e.contains("*")&&i>0){
                    n[i-1]*=2;
                    n[i]=(int)Math.pow(Integer.parseInt(e.substring(0,e.indexOf("S"))),1)*2;
                }else if(e.contains("*")&&i==0)
                    n[i]=(int)Math.pow(Integer.parseInt(e.substring(0,e.indexOf("S"))),1)*2;
                else if(e.contains("#"))
                    n[i]=Integer.parseInt(e.substring(0,e.indexOf("S")))*(-1);
                else
                    n[i]=(int)Math.pow(Integer.parseInt(e.substring(0,e.indexOf("S"))),1);
            }else if(e.contains("D")){
                if(e.contains("*")&&i>0){
                    n[i-1]*=2;
                    n[i]=(int)Math.pow(Integer.parseInt(e.substring(0,e.indexOf("D"))),2)*2;
                }else if(e.contains("*")&&i==0)
                    n[i]=(int)Math.pow(Integer.parseInt(e.substring(0,e.indexOf("D"))),2)*2;
                else if(e.contains("#"))
                    n[i]=(int)Math.pow(Integer.parseInt(e.substring(0,e.indexOf("D"))),2)*(-1);
                else
                    n[i]=(int)Math.pow(Integer.parseInt(e.substring(0,e.indexOf("D"))),2);
            }else if(e.contains("T")){
                if(e.contains("*")&&i>0){
                    n[i-1]*=2;
                    n[i]=(int)Math.pow(Integer.parseInt(e.substring(0,e.indexOf("T"))),3)*2;
                }else if(e.contains("*")&&i==0)
                    n[i]=(int)Math.pow(Integer.parseInt(e.substring(0,e.indexOf("T"))),3)*2;
                else if(e.contains("#"))
                    n[i]=(int)Math.pow(Integer.parseInt(e.substring(0,e.indexOf("T"))),3)*(-1);
                else
                    n[i]=(int)Math.pow(Integer.parseInt(e.substring(0,e.indexOf("T"))),3);
            }
        }
        
        
        for(int i =0;i<n.length;i++){
           answer+=n[i];
        }
        
        return answer;
    }
}
